package factorymethod;

public class AbstractFactory {

	public static void main(String[] args) {

	}

}

//Interfaces para os produtos abstratos
interface Button {
	void paint();
}

interface Checkbox {
	void paint();
}

//Interface para a fábrica abstrata
interface GUIFactory {
	Button createButton();

	Checkbox createCheckbox();
}

//Implementações concretas dos produtos para o Windows
class WinButton implements Button {
	public void paint() {
		System.out.println("Windows button is painted");
	}
}

class WinCheckbox implements Checkbox {
	public void paint() {
		System.out.println("Windows checkbox is painted");
	}
}

//Implementações concretas dos produtos para o macOS
class MacButton implements Button {
	public void paint() {
		System.out.println("MacOS button is painted");
	}
}

class MacCheckbox implements Checkbox {
	public void paint() {
		System.out.println("MacOS checkbox is painted");
	}
}

//Implementações concretas das fábricas
class WinFactory implements GUIFactory {
	public Button createButton() {
		return new WinButton();
	}

	public Checkbox createCheckbox() {
		return new WinCheckbox();
	}
}

class MacFactory implements GUIFactory {
	public Button createButton() {
		return new MacButton();
	}

	public Checkbox createCheckbox() {
		return new MacCheckbox();
	}
}

//Classe que representa a aplicação
class Application {
	private GUIFactory factory;
	private Button button;
	private Checkbox checkbox;

	public Application(GUIFactory factory) {
		this.factory = factory;
		this.button = factory.createButton();
		this.checkbox = factory.createCheckbox();
	}

	public void createUI() {
		button.paint();
		checkbox.paint();
	}
}

//Classe para configurar e iniciar a aplicação
class ApplicationConfigurator {
	public static void main(String[] args) {
		GUIFactory factory;

		// Simule a leitura das configurações do sistema operacional
		String os = "Windows"; // Ou "Mac" para testar com o macOS

		if (os.equals("Windows")) {
			factory = new WinFactory();
		} else if (os.equals("Mac")) {
			factory = new MacFactory();
		} else {
			throw new IllegalArgumentException("Error! Unknown operating system.");
		}

		Application app = new Application(factory);
		app.createUI();
	}
}
