
public class Adapter {
	public static void main(String[] args) {
		RoundHole hole = new RoundHole(5);
		RoundPeg rpeg = new RoundPeg(6);
		System.out.println("hole.fits(rpeg): " + hole.fits(rpeg)); // true

		SquarePeg smallSqpeg = new SquarePeg(5);
		// SquarePeg largeSqpeg = new SquarePeg(10);
		// Isso não vai compilar (tipos incompatíveis).

		SquarePegAdapter smallSqpegAdapter = new SquarePegAdapter(smallSqpeg);
		// SquarePegAdapter largeSqpegAdapter = new SquarePegAdapter(largeSqpeg);
		// Isso não vai compilar (tipos incompatíveis).

		System.out.println("hole.fits(smallSqpegAdapter): " + hole.fits(smallSqpegAdapter)); // true
		// System.out.println("hole.fits(largeSqpegAdapter): " +
		// hole.fits(largeSqpegAdapter)); // false
	}
}

class RoundHole {
	private int radius;

	public RoundHole(int radius) {
		this.radius = radius;
	}

	public int getRadius() {
		return radius;
	}

	public boolean fits(RoundPeg peg) {
		return getRadius() >= peg.getRadius();
	}
}

class RoundPeg {
	private int radius;

	public RoundPeg(int radius) {
		this.radius = radius;
	}

	public int getRadius() {
		return radius;
	}
}

class SquarePeg {
	private int width;

	public SquarePeg(int width) {
		this.width = width;
	}

	public int getWidth() {
		return width;
	}
}

class SquarePegAdapter extends RoundPeg {
	private SquarePeg peg;

	public SquarePegAdapter(SquarePeg peg) {
		super(0);
		this.peg = peg;
	}

	@Override
	public int getRadius() {
		return (int) (peg.getWidth() * Math.sqrt(2) / 2);
	}
}